{"version":3,"sources":["components/ChartInst.js","components/Cities.js","components/WeatherCardSkeleton.js","components/Header.js","components/WeatherCondition.js","components/WeatherHourly.js","components/Body.js","components/WeatherDaily.js","components/Footer.js","components/WeatherCard.js","utils.js","components/UnitToggle.js","components/Autocomplete.js","App.js","index.js"],"names":["myChart","Cities","props","cityList","map","city","onClick","onSelection","className","HeaderSkeleton","ConditionSkeleton","Array","keys","e","BodySkeleton","HourlyForecastItemSkeleton","HourlyForecastSkeleton","forecast","index","WeatherCardSkeleton","Header","name","dateTime","date","Date","toLocaleDateString","toLocaleTimeString","ConditionItem","value","icon","ConditionList","current","defaults","sunrise","sunset","humidity","wind_speed","Object","key","HourlyItem","hour","time","Intl","DateTimeFormat","hour12","format","dt","replace","weather","description","temp","src","process","alt","HourlyForecast","hourly","Chart","register","registerables","ChartInst","hourlyData","hourlyTemp","hourlyRain","rain","chartContainer","useRef","useEffect","cfg","type","data","datasets","label","yAxisID","fill","borderColor","tension","backgroundColor","labels","options","responsive","scales","TempAxis","id","position","grid","display","drawBorder","drawOnChartArea","title","text","RainAxis","ticks","min","plugins","tooltip","callbacks","context","dataset","datasetIndex","parsed","y","myChartRef","getContext","destroy","buildChart","ref","Body","feels_like","slice","DailyItem","day","dayofWeek","weekday","max","DailyForecast","daily","Footer","href","role","WeatherCard","weatherData","units","unitMapper","pressure","dew_point","clouds","visibility","wind_gust","wind_deg","snow","convTemp","fahrenheit","toFixed","convSpd","spd","mph","res","reduce","acc","fromEntries","entries","k","v","formatData","style","borderRadius","UnitToggle","handleImperial","handleMetric","Autocomplete","changeCity","changeLatLon","useState","suggestionIdx","suggestions","query","state","setState","axios","CancelToken","source","cancel","token","timeOutId","setTimeout","getData","then","clearTimeout","cancelToken","a","get","console","error","isCancel","currentTarget","lat","lon","SearchBar","onChange","onKeyDown","placeholder","autoFocus","autoComplete","suggs","keyCode","length","suggestion","coord","country","toLowerCase","initialState","timezone","timezone_offset","fetchReducer","action","payload","isLoading","isError","Error","dispatch","params","weatherInfo","timeStyle","App","selectedCity","setSelectedCity","selectedCoord","setSelectedCoord","setUnits","useReducer","fetchWeatherData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6557958.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { Chart, registerables } from 'chart.js';\r\nChart.register(...registerables);\r\nlet myChart;\r\n/*\r\n    hourly\r\n    dt\r\n    temp\r\n    description\r\n    windspd\r\n*/\r\n// const ChartInst = ({data}) => {\r\n//   const chartRef = useRef(null);\r\n//   useEffect(() => {\r\n//     if (chartRef.current) {\r\n//       const myChart = new Chart(chartRef.current, {\r\n//         type: 'bar',\r\n//         data: {\r\n//           labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n//           datasets: [\r\n//             {\r\n//               label: '# of Votes',\r\n//               data: [12, 19, 3, 5, 2, 3],\r\n//               backgroundColor: [\r\n//                 'rgba(255, 99, 132, 0.2)',\r\n//                 'rgba(54, 162, 235, 0.2)',\r\n//                 'rgba(255, 206, 86, 0.2)',\r\n//                 'rgba(75, 192, 192, 0.2)',\r\n//                 'rgba(153, 102, 255, 0.2)',\r\n//                 'rgba(255, 159, 64, 0.2)',\r\n//               ],\r\n//               borderColor: [\r\n//                 'rgba(255, 99, 132, 1)',\r\n//                 'rgba(54, 162, 235, 1)',\r\n//                 'rgba(255, 206, 86, 1)',\r\n//                 'rgba(75, 192, 192, 1)',\r\n//                 'rgba(153, 102, 255, 1)',\r\n//                 'rgba(255, 159, 64, 1)',\r\n//               ],\r\n//               borderWidth: 1,\r\n//             },\r\n//           ],\r\n//         },\r\n//         options: {\r\n//           scales: {\r\n//             yAxes: [\r\n//               {\r\n//                 ticks: {\r\n//                   beginAtZero: true,\r\n//                 },\r\n//               },\r\n//             ],\r\n//           },\r\n//         },\r\n//       });\r\n//     }\r\n//   }, []);\r\n//   return (\r\n//     <div>\r\n//       <canvas ref={chartRef} />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nconst ChartInst = ({ hourlyData }) => {\r\n  // const hourlyPOP = hourlyData?.map((hour) => hour.pop);\r\n  const hourlyTemp = hourlyData?.map((hour) => hour.temp);\r\n  const hourlyRain = hourlyData?.map((hour) => hour.rain && hour.rain['1h']);\r\n  const chartContainer = useRef(null);\r\n  // const [chartInstance, setChartInstance] = useState(null);\r\n  useEffect(() => {\r\n    const buildChart = () => {\r\n      const cfg = {\r\n        type: 'line',\r\n        data: {\r\n          datasets: [\r\n            {\r\n              type: 'line',\r\n              label: 'temp',\r\n              data: hourlyTemp,\r\n              yAxisID: 'TempAxis',\r\n              fill: false,\r\n              borderColor: 'rgb(0,158,115)',\r\n              tension: 0.4,\r\n            },\r\n            {\r\n              type: 'bar',\r\n              label: 'rain',\r\n              data: hourlyRain,\r\n              yAxisID: 'RainAxis',\r\n              // fill: true,\r\n              // borderColor: 'rgb(39,76,245)',\r\n              backgroundColor: 'rgba(39,76,245,0.3)',\r\n            },\r\n          ],\r\n          labels: hourlyData?.map((hour) => {\r\n            return new Intl.DateTimeFormat('en-US', {\r\n              hour: 'numeric',\r\n              hour12: true,\r\n            })\r\n              .format(new Date(hour?.dt * 1000))\r\n              .replace(/\\s+/g, '');\r\n          }),\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          scales: {\r\n            TempAxis: {\r\n              id: 'TempAxis',\r\n              type: 'linear',\r\n              position: 'left',\r\n              grid: {\r\n                display: true,\r\n                drawBorder: false,\r\n                drawOnChartArea: false,\r\n              },\r\n              // suggestedMin: Math.min(...hourlyTemp),\r\n              // suggestedMax: Math.max(...hourlyTemp),\r\n              title: {\r\n                text: '°',\r\n              },\r\n              // scaleLabel: { display: true, labelString: '°' },\r\n            },\r\n            RainAxis: {\r\n              id: 'RainAxis',\r\n              position: 'right',\r\n              grid: {\r\n                display: false,\r\n                drawBorder: false,\r\n                drawOnChartArea: false,\r\n              },\r\n              ticks: {\r\n                display: false,\r\n                min: 0,\r\n              },\r\n              // scaleLabel: { display: true, labelString: 'mm' },\r\n            },\r\n          },\r\n          plugins: {\r\n            tooltip: {\r\n              callbacks: {\r\n                label: (context) => {\r\n                  let label = context.dataset.label || '';\r\n                  if (context.datasetIndex === 1 && context.parsed.y !== null) {\r\n                    label += ' ' + context.parsed.y + ' mm';\r\n                  } else if (\r\n                    context.datasetIndex === 0 &&\r\n                    context.parsed.y !== null\r\n                  ) {\r\n                    label += ' ' + context.parsed.y + '°';\r\n                  }\r\n                  return label;\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      };\r\n      const myChartRef = chartContainer.current.getContext('2d');\r\n      if (typeof myChart !== 'undefined') myChart.destroy();\r\n      myChart = new Chart(myChartRef, cfg);\r\n    };\r\n    buildChart();\r\n    return () => myChart.destroy();\r\n  }, [chartContainer, hourlyData]);\r\n  // const updateDataset = (datasetIndex, newData) => {\r\n  //   chartInstance.data.datasets[datasetIndex].data = newData;\r\n  //   chartInstance.update();\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <canvas ref={chartContainer} />\r\n    </div>\r\n  );\r\n};\r\nexport default ChartInst;\r\n","import React from 'react';\r\n\r\nconst Cities = (props) => {\r\n  const cityList = props.cityList.map((city) => (\r\n    <button\r\n      key={city}\r\n      onClick={() => props.onSelection(city)}\r\n      className='btn btn-light my-1 mx-1'\r\n    >\r\n      {city}\r\n    </button>\r\n  ));\r\n  return (\r\n    <div className='my-3 d-flex flex-wrap justify-content-center align-items-stretch align-self-stretch'>\r\n      {cityList}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cities;\r\n","import React from 'react';\r\n\r\nconst HeaderSkeleton = () => {\r\n  return (\r\n    <div className='card-header row placeholder-glow d-flex justify-content-between g-0 p-4'>\r\n      <h4 className='card-title flex-grow-1  col-4'>\r\n        <span className='placeholder col-6'></span>\r\n      </h4>\r\n      <h6 className='col-4'>\r\n        <span className='placeholder col-12'></span>\r\n      </h6>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ConditionSkeleton = () => {\r\n  return (\r\n    <div className='col-4'>\r\n      {[...Array(2).keys()].map((e) => {\r\n        return (\r\n          <div key={e}>\r\n            <i className='placeholder col-1'></i>\r\n            <span className='placeholder col-9'></span>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst BodySkeleton = () => {\r\n  return (\r\n    <div className='card-body row placeholder-glow g-0 p-4'>\r\n      <div className='text-center'>\r\n        <h6 className='display-4 font-weight-bold'>\r\n          <span className='placeholder col-6'></span>\r\n        </h6>\r\n        <p className='small px-5'>\r\n          <span className='placeholder col-6'></span>\r\n        </p>\r\n      </div>\r\n      <div className='d-flex justify-content-between align-items-center'>\r\n        <ConditionSkeleton />\r\n        <div className='display-4 col-4'>\r\n          <span className='placeholder col-12'></span>\r\n        </div>\r\n      </div>\r\n      <HourlyForecastSkeleton />\r\n    </div>\r\n  );\r\n};\r\n\r\n// const DailyForecastItem = ({ forecast }) => {\r\n//   const day = new Intl.DateTimeFormat('en-US', { weekday: 'long' })\r\n//     .format(new Date(forecast.dt * 1000))\r\n//     .substring(0, 3);\r\n//   const temp = { min: forecast.temp.min, max: forecast.temp.max };\r\n//   const icon = forecast.weather[0].icon;\r\n//   return (\r\n//     <div className='df__item flex-column text-center'>\r\n//       <p className='small mb-1'>{day}</p>\r\n//       <div className=' small mb-0'>\r\n//         <img\r\n//           className='img-fluid'\r\n//           src={`${process.env.PUBLIC_URL}/assets/icons/${icon}.png`}\r\n//           alt=''\r\n//         />\r\n//         <p className='small mb-0'>{temp.max}</p>\r\n//         <p className='small mb-0 text-muted'>{temp.min}</p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nconst HourlyForecastItemSkeleton = () => {\r\n  return (\r\n    <div className='df__item flex-column text-center'>\r\n      <h1>\r\n        <span className='placeholder col-12 placeholder-lg'></span>\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst HourlyForecastSkeleton = () => {\r\n  return (\r\n    <div className='d-flex justify-content-space-evenly align-items-center'>\r\n      {[...Array(7).keys()].map((forecast, index) => {\r\n        return <HourlyForecastItemSkeleton key={index} forecast={forecast} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\n// const FooterSkeleton = () => {\r\n//   return (\r\n//     <div className='card-footer row placeholder-glow g-0 p-4'>\r\n//       <HourlyForecastSkeleton />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nconst WeatherCardSkeleton = () => {\r\n  return (\r\n    <div className='card' aria-hidden='true'>\r\n      <HeaderSkeleton />\r\n      <BodySkeleton />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherCardSkeleton;\r\n","const Header = ({ name, dateTime }) => {\r\n  const date = new Date(dateTime * 1000);\r\n  // const fullDate = `${date.toLocaleDateString()} - ${date.toLocaleTimeString()}`;\r\n  return (\r\n    <div className='card-header row g-0 p-4'>\r\n      <div className='hstack gap-3'>\r\n        <div className='h3 card-title pe-5'>{name}</div>\r\n        <div className='vr'></div>\r\n        <div className='vstack px-5'>\r\n          <div className='h6 text-muted small'>{date.toLocaleDateString()}</div>\r\n          <div className='h6 text-muted small'> {date.toLocaleTimeString()}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const ConditionItem = ({ value, icon }) => {\r\n  return (\r\n    <div>\r\n      <i className={icon}></i>\r\n      <span>{value}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ConditionList = ({ current }) => {\r\n  const defaults = {\r\n    sunrise: 'bi bi-sunrise fa-solid fa-fw',\r\n    sunset: 'bi bi-sunset fa-solid fa-fw',\r\n    humidity: 'fas fa-tint fa-fw',\r\n    wind_speed: 'fas fa-wind fa-fw',\r\n    // dew_point: 'fas fa-dewpoint',\r\n    // visibility: 'far fa-eye fa-fw',\r\n  };\r\n  const keys = Object.keys(defaults);\r\n  return (\r\n    <div className='flex-grow-1'>\r\n      {keys.map((key, index) => {\r\n        return (\r\n          <ConditionItem\r\n            key={index}\r\n            value={current && current[key]}\r\n            icon={defaults[key]}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\n// const ConditionList = ({ current }) => {\r\n//   const conds = {\r\n//     sunset: 'far fa-sunset fa-fw',\r\n//     sunrise: 'far fa-sunrise fa-fw',\r\n//     humidity: 'fas fa-tint fa-fw',\r\n//     wind_speed: 'fas fa-wind fa-fw',\r\n//     dew_point: 'fal fa-dewpoint fa-fw',\r\n//     visibility: 'far fa-eye fa-fw',\r\n//   };\r\n//   const intersectKeys = (...objects) => {\r\n//     return objects\r\n//       .map((object) => Object.keys(object))\r\n//       .sort((a, b) => a.length - b.length)\r\n//       .reduce((a, b) => a.filter((key) => b.includes(key)));\r\n//   };\r\n//   const conditions = current\r\n//     ? intersectKeys(current, conds).reduce((obj, key) => {\r\n//         return {\r\n//           ...obj,\r\n//           [key]: { data: current[key], iconClass: conds[key] },\r\n//         };\r\n//       }, {})\r\n//     : null;\r\n//   return (\r\n//     <div>\r\n//       {conditions &&\r\n//         Object.keys(conditions).map((condition, index) => {\r\n//           return (\r\n//             <ConditionItem\r\n//               key={index}\r\n//               data={conditions[condition].data}\r\n//               iconClass={conditions[condition].iconClass}\r\n//             />\r\n//           );\r\n//         })}\r\n//     </div>\r\n//   );\r\n// };\r\n","import './WeatherHourly.css';\r\n\r\nexport const HourlyItem = ({ hour }) => {\r\n  const time = new Intl.DateTimeFormat('en-US', {\r\n    hour: 'numeric',\r\n    hour12: true,\r\n  })\r\n    .format(new Date(hour?.dt * 1000))\r\n    .replace(/\\s+/g, '');\r\n  const icon = hour?.weather[0].icon;\r\n  const description = hour?.weather[0].description;\r\n  const temp = hour?.temp;\r\n  return (\r\n    <div className='d-flex flex-column hf__item justify-content-evenly small'>\r\n      <p className='mb-0'>{time}</p>\r\n      <div>\r\n        <img\r\n          className='img-fluid'\r\n          src={`${process.env.PUBLIC_URL}/assets/icons/${icon}.png`}\r\n          alt={description}\r\n        />\r\n      </div>\r\n      <p>{temp}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const HourlyForecast = ({ hourly }) => {\r\n  return (\r\n    <div className='d-flex  hf__items text-center'>\r\n      {hourly &&\r\n        hourly.map((hour, index) => {\r\n          return <HourlyItem key={index} hour={hour} />;\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n","import { ConditionList } from './WeatherCondition';\r\nimport { HourlyForecast } from './WeatherHourly';\r\nimport ChartInst from './ChartInst';\r\nconst Body = ({ current, hourly }) => {\r\n  const temp = current?.temp;\r\n  const feels_like = current?.feels_like;\r\n  const description = current?.weather[0]?.description;\r\n  const icon = current?.weather[0]?.icon;\r\n  return (\r\n    <div className='card-body row g-0 p-4'>\r\n      <div className='text-center d-flex flex-column mb-4'>\r\n        <h4 className='display-4 font-weight-bold'>{temp}</h4>\r\n        <span className='small px-5'> Feels like: {feels_like}</span>\r\n        <span className='small px-5'>{description}</span>\r\n      </div>\r\n      <div className='d-flex align-items-center pb-3'>\r\n        <ConditionList current={current} />\r\n        <div>\r\n          <img\r\n            src={`${process.env.PUBLIC_URL}/assets/icons/${icon}.png`}\r\n            alt={description}\r\n          />\r\n        </div>\r\n      </div>\r\n      <ChartInst hourlyData={hourly?.slice(0, 8)} />\r\n      <HourlyForecast hourly={hourly} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","export const DailyItem = ({ day }) => {\r\n  const dayofWeek = new Intl.DateTimeFormat('en-US', {\r\n    weekday: 'long',\r\n  }).format(new Date(day.dt * 1000));\r\n  const temp = { min: day.temp.min, max: day.temp.max };\r\n  const icon = day.weather[0].icon;\r\n  const description = day?.weather[0].description;\r\n  return (\r\n    <div className='d-flex align-items-center list-group-item border-0 mb-0'>\r\n      <p className='flex-grow-1 small mb-0'>{dayofWeek}</p>\r\n      <p className='small mb-0'>\r\n        <img\r\n          className='img-fluid w-50'\r\n          src={`${process.env.PUBLIC_URL}/assets/icons/${icon}.png`}\r\n          alt={description}\r\n        />\r\n      </p>\r\n      <p className='small col-2 mb-0'>{temp.max}</p>\r\n      <p className='small col-2 text-muted mb-0'>{temp.min}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const DailyForecast = ({ daily }) => {\r\n  return (\r\n    <div className='list-group collapse' id='collapseContent1'>\r\n      {daily &&\r\n        daily.map((day, index) => {\r\n          return <DailyItem key={index} day={day} />;\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n","import { DailyForecast } from './WeatherDaily';\r\nimport './Footer.css';\r\nconst Footer = ({ daily }) => {\r\n  return (\r\n    <div className='card-footer row g-0 p-4'>\r\n      <DailyForecast daily={daily} />\r\n      <a\r\n        className='btn btn-link link-info p-md-1 my-1'\r\n        data-mdb-toggle='collapse'\r\n        href='#collapseContent1'\r\n        role='button'\r\n        aria-expanded='false'\r\n        aria-controls='collapseContent1'\r\n      >\r\n        <i className='fas fa-chevron-down fa-lg'></i>\r\n        <i className='fas fa-chevron-up fa-lg'></i>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import Header from './Header';\r\nimport Body from './Body';\r\nimport Footer from './Footer';\r\nimport { formatData } from '../utils';\r\nimport './WeatherCard.css';\r\n\r\nconst WeatherCard = ({ data, units }) => {\r\n  const weatherData = formatData(data, units);\r\n  return (\r\n    <div className='card' style={{ borderRadius: '1.25rem' }}>\r\n      <Header\r\n        name={weatherData?.current?.name}\r\n        dateTime={weatherData?.current?.dt}\r\n      />\r\n      <Body current={weatherData?.current} hourly={weatherData?.hourly} />\r\n      <Footer daily={weatherData?.daily} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","const fahrenheitToCelsius = (fahrenheit) => {\r\n  return ((fahrenheit - 32) * 5) / 9;\r\n};\r\n\r\nconst mphToms = (mph) => {\r\n  return mph * 0.44704;\r\n};\r\n\r\nexport const formatData = (data, units) => {\r\n  if (data.current) {\r\n    // const temps = ['temp', 'feels_like', 'dew_point'];\r\n    // const winds = ['wind_speed', 'wind_gust'];\r\n    const unitMapper = {\r\n      temp: units === 'metric' ? '°C' : '°F',\r\n      feels_like: units === 'metric' ? '°C' : '°F',\r\n      pressure: 'hPa',\r\n      humidity: '%',\r\n      dew_point: units === 'metric' ? '°C' : '°F',\r\n      clouds: '%',\r\n      visibility: 'm',\r\n      wind_speed: units === 'metric' ? ' m/s' : ' mph',\r\n      wind_gust: units === 'metric' ? ' m/s' : ' mph',\r\n      wind_deg: '°',\r\n      rain: 'mm',\r\n      snow: 'mm',\r\n    };\r\n    const convTemp = (temp, units) => {\r\n      return (\r\n        temp &&\r\n        (units === 'metric' ? fahrenheitToCelsius(temp) : temp).toFixed()\r\n      );\r\n    };\r\n    const convSpd = (spd, units) => {\r\n      return spd && (units === 'metric' ? mphToms(spd) : spd).toFixed();\r\n    };\r\n    const res = {\r\n      ...data?.current,\r\n      temp: convTemp(data?.current?.temp, units),\r\n      feels_like: convTemp(data?.current?.feels_like, units),\r\n      dew_point: convTemp(data?.current?.dew_point, units),\r\n      wind_speed: convSpd(data?.current?.wind_speed, units),\r\n      wind_gust: convSpd(data?.current?.wind_gust, units),\r\n    };\r\n    return {\r\n      ...data,\r\n      current: Object.keys(res).reduce((acc, key) => {\r\n        acc[key] = key in unitMapper ? res[key] + unitMapper[key] : res[key];\r\n        return acc;\r\n      }, {}),\r\n      daily: data.daily.map((day) => {\r\n        return {\r\n          ...day,\r\n          temp: Object.fromEntries(\r\n            Object.entries(day.temp).map(([k, v]) => [k, convTemp(v, units)])\r\n          ),\r\n        };\r\n      }),\r\n      hourly: data.hourly.map((hour) => {\r\n        return {\r\n          ...hour,\r\n          temp: convTemp(hour.temp, units),\r\n        };\r\n      }),\r\n    };\r\n  }\r\n};\r\n\r\n// const geo_default = {\r\n//   enableHighAccuracy: true,\r\n//   timeout: 10000,\r\n//   maximumAge: 30000,\r\n// };\r\n\r\n// const getLocation = (opts) => {\r\n//   if ('geolocation' in navigator) {\r\n//     opts = opts ? opts : geo_default;\r\n//     return new Promise((resolve, reject) => {\r\n//       navigator.geolocation.getCurrentPosition(\r\n//         (position) => {\r\n//           resolve(position);\r\n//         },\r\n//         (err) => {\r\n//           reject(err);\r\n//         },\r\n//         opts\r\n//       );\r\n//     });\r\n//   } else {\r\n//     let err = new Error('No browser support for geolocatoin');\r\n//     return Promise.reject(err);\r\n//   }\r\n// };\r\n","import React from 'react';\r\n\r\nconst UnitToggle = ({ handleImperial, handleMetric }) => {\r\n  return (\r\n    <div className='my-3 d-flex flex-wrap justify-content-center align-items-stretch align-self-stretch'>\r\n      <button onClick={handleImperial} className='btn btn-sm btn-light'>\r\n        °F\r\n      </button>\r\n      <button onClick={handleMetric} className='btn btn-sm btn-dark'>\r\n        °C\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UnitToggle;\r\n","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport './Autocomplete.css';\r\nexport default function Autocomplete({ changeCity, changeLatLon }) {\r\n  const [state, setState] = useState({\r\n    suggestionIdx: 0,\r\n    suggestions: [],\r\n    query: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    const { cancel, token } = axios.CancelToken.source();\r\n    const timeOutId = setTimeout(\r\n      () =>\r\n        getData(state.query, token).then((res) => {\r\n          setState({ ...state, suggestions: res });\r\n        }),\r\n      500\r\n    );\r\n    return () => cancel('No longer latest query') || clearTimeout(timeOutId);\r\n  }, [state.query]);\r\n\r\n  //   useEffect(() => {\r\n  //     const { cancel, token } = axios.CancelToken.source();\r\n  //     const timeOutId = setTimeout(\r\n  //       () => onSuggestionsFetchRequested(state.query),\r\n  //       500\r\n  //     );\r\n  //     return () => cancel('No longer latest query') || clearTimeout(timeOutId);\r\n  //   }, [state.query]);\r\n\r\n  const getData = async (query, cancelToken) => {\r\n    let res = { data: [] };\r\n    if (query) {\r\n      try {\r\n        res = await axios.get(`/api/suggestions?name=${query}`, cancelToken);\r\n        // console.log(res);\r\n      } catch (err) {\r\n        console.error(err);\r\n        axios.isCancel(err);\r\n      }\r\n    }\r\n    return res.data;\r\n  };\r\n\r\n  //   const getSuggestions = async (value, cancelToken) => {\r\n  //     // const inputValue = value.trim().toLowerCase();\r\n  //     const inputLength = value.length;\r\n  //     return inputLength === 0 ? [] : await getData(value, cancelToken); // make api call here\r\n  //   };\r\n\r\n  //   const onSuggestionsFetchRequested = async (value, cancelToken) => {\r\n  //     getSuggestions(value, cancelToken).then((results) => {\r\n  //       setState({ ...state, suggestions: results });\r\n  //     });\r\n  //     // setState({ ...state, suggestions: getSuggestions(value, cancelToken) });\r\n  //   };\r\n\r\n  // const onSuggestionsClearRequested = () => {\r\n  //   setState({ ...state, suggestionIdx: 0, suggestions: [] });\r\n  // };\r\n\r\n  const onSuggestionAccept = () => {\r\n    let selection = state.suggestions[state.suggestionIdx];\r\n    setState({\r\n      ...state,\r\n      query: '',\r\n      suggestionIdx: 0,\r\n      suggestions: [],\r\n    });\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setState({ ...state, query: e.currentTarget.value });\r\n  };\r\n\r\n  const onClick = (e) => {\r\n    // changeLatLon(e.currentTarget.dataset.item);\r\n    setState({\r\n      suggestionIdx: 0,\r\n      suggestions: [],\r\n      query: '',\r\n    });\r\n    changeCity({\r\n      name: e.currentTarget.dataset.city,\r\n      lat: e.currentTarget.dataset.lat,\r\n      lon: e.currentTarget.dataset.lon,\r\n    });\r\n  };\r\n\r\n  const onKeyDown = (e) => {\r\n    if (e.keyCode === 13) {\r\n      //enter key\r\n      onSuggestionAccept();\r\n    } else if (e.keyCode === 38 && state.suggestionIdx !== 0) {\r\n      setState({ ...state, suggestionIdx: state.suggestionIdx - 1 });\r\n    } else if (\r\n      e.keyCode === 40 &&\r\n      state.suggestionIdx < state.suggestions.length - 1\r\n    ) {\r\n      setState({ ...state, suggestionIdx: state.suggestionIdx + 1 });\r\n    }\r\n  };\r\n\r\n  //   const Suggestion = ({ suggestion, onClick }, index) => {\r\n  //     return (\r\n  //       <li key={index} onClick={onClick}>\r\n  //         <a href=''>{suggestion.name}</a>\r\n  //       </li>\r\n  //     );\r\n  //   };\r\n\r\n  //   const Suggestions = (suggestions) =>\r\n  //     suggestions.map((suggestion, index) => {\r\n  //       return (\r\n  //         <Suggestion key={index} suggestion={suggestion} onClick={onClick} />\r\n  //       );\r\n  //     });\r\n\r\n  const SearchBar = ({ onChange, onKeyDown, placeholder, query }) => {\r\n    return (\r\n      <div className='input-group mt-3 rounded'>\r\n        <input\r\n          autoFocus\r\n          type='search'\r\n          value={query}\r\n          autoComplete='off'\r\n          onChange={onChange}\r\n          onKeyDown={onKeyDown}\r\n          id='form1'\r\n          className='form-control'\r\n          placeholder={placeholder}\r\n          aria-label='Search'\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const suggs = state.suggestions;\r\n  return (\r\n    <>\r\n      <SearchBar\r\n        onChange={onChange}\r\n        onKeyDown={onKeyDown}\r\n        placeholder={'City'}\r\n        query={state.query}\r\n      />\r\n      {suggs && (\r\n        <ul className='dropdown-menu scrollable-menu position-static rounded show'>\r\n          {suggs.map((suggestion, index) => {\r\n            return (\r\n              <li\r\n                className='d-flex justify-content-between dropdown-item'\r\n                data-city={suggestion.name}\r\n                data-lat={suggestion.coord.lat}\r\n                data-lon={suggestion.coord.lon}\r\n                key={index}\r\n                onClick={onClick}\r\n              >\r\n                <span>\r\n                  {suggestion.name + ', '}\r\n                  {suggestion.state && suggestion.state + ', '}\r\n                  {suggestion.country + ' '}\r\n                  <img\r\n                    src={`https://openweathermap.org/images/flags/${suggestion.country.toLowerCase()}.png`}\r\n                    alt=''\r\n                  />\r\n                </span>\r\n                <span className='text-muted small'>\r\n                  {suggestion.coord.lat.toFixed(3) +\r\n                    ', ' +\r\n                    suggestion.coord.lon.toFixed(3)}\r\n                </span>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useReducer } from 'react';\nimport axios from 'axios';\n// import { getData } from './apis/config';\n// import SearchBar from './components/SearchBar';\nimport Cities from './components/Cities';\nimport WeatherCardSkeleton from './components/WeatherCardSkeleton';\nimport WeatherCard from './components/WeatherCard';\nimport './App.css';\nimport UnitToggle from './components/UnitToggle';\nimport Autocomplete from './components/Autocomplete';\n\nconst initialState = {\n  lat: null,\n  lon: null,\n  name: '',\n  timezone: '',\n  timezone_offset: null,\n  current: null,\n  hourly: [],\n  daily: [],\n};\n\nfunction fetchReducer(state, action) {\n  switch (action.type) {\n    case 'SEED':\n      return {\n        ...state,\n        weatherData: action.payload,\n      };\n    case 'FETCH_START':\n      return {\n        ...state,\n        isLoading: true,\n        isError: false,\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        weatherData: action.payload,\n        isLoading: false,\n        isError: false,\n      };\n    case 'FETCH_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n      };\n    case 'RESET':\n      return {\n        weatherData: initialState,\n        isLoading: false,\n        isError: false,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nasync function fetchWeatherData(query, dispatch, cancelToken) {\n  let res = {};\n  if (query.name || (query?.coord?.lat && query?.coord?.lon)) {\n    dispatch({ type: 'FETCH_START' });\n    try {\n      // const cityInfo = await getData(`/weather?q=${query}`, cancelToken);\n      // // console.log(cityInfo);\n      // const { lat, lon } = cityInfo.coord;\n      // const data = await getData(\n      //   `/onecall?lat=${lat}&lon=${lon}&exclude=minutely,alerts`\n      // );\n      // // console.log(data);\n      // const weatherInfo = data;\n      // weatherInfo.current.name = cityInfo.name;\n      const params = {};\n      if (query.name) {\n        params.name = query.name;\n      }\n      if (query.coord.lat && query.coord.lon) {\n        params.lat = query.coord.lat;\n        params.lon = query.coord.lon;\n      }\n      res = await axios.get('/api/weather', { params }, cancelToken);\n      let weatherInfo = res.data;\n      weatherInfo.current.name = query.name;\n      weatherInfo.current.sunset = new Date(\n        weatherInfo.current.sunset * 1000\n      ).toLocaleTimeString([], { timeStyle: 'short' });\n      weatherInfo.current.sunrise = new Date(\n        weatherInfo.current.sunrise * 1000\n      ).toLocaleTimeString([], { timeStyle: 'short' });\n      dispatch({ type: 'FETCH_SUCCESS', payload: weatherInfo });\n\n      // else {\n      //   const cityInfo = await getData(`/weather?q=${query.city}`, cancelToken);\n      //   // console.log(cityInfo);\n      //   const { lat, lon } = cityInfo.coord;\n      //   const res = await getData(\n      //     `/onecall?lat=${lat}&lon=${lon}&exclude=minutely,alerts`\n      //   );\n      //   // console.log(data);\n      //   const weatherInfo = res;\n      //   weatherInfo.current.name = cityInfo.name;\n      //   dispatch({ type: 'FETCH_SUCCESS', payload: weatherInfo });\n      // }\n      //setSelectedCity(res.name);\n    } catch (err) {\n      console.error(err);\n      axios.isCancel(err) || dispatch({ type: 'FETCH_FAILURE' });\n    }\n  }\n}\n\n// async function fetchSearchSuggestions(query, cancelToken) {\n//   if (query) {\n//     // dispatch({ type: 'FETCH_START' });\n//     try {\n//       const result = await axios.get(\n//         `/api/weather?cityname=${query}`,\n//         cancelToken\n//       );\n//       console.log(result);\n//       return result.data;\n//       // cb(result);\n//     } catch (err) {\n//       console.error(err);\n//       axios.isCancel(err);\n//       // || dispatch({ type: 'FETCH_FAILURE' });\n//     }\n//   }\n// }\n\nconst App = () => {\n  //const defaultCity = () => window.localStorage.getItem('city');\n  //state: search->city->api->weather info\n  const cities = ['New York', 'Detroit', 'Chicago', 'Los Angeles', 'Seattle'];\n  const [selectedCity, setSelectedCity] = useState('');\n  const [selectedCoord, setSelectedCoord] = useState({ lat: null, lon: null });\n  // const [showSuggestions, setShowSuggestions] = useState(false);\n  // const [_searches, setSearchSuggestions] = useState([]);\n  // const [searchTerm, setSearchTerm] = useState('');\n  const [units, setUnits] = useState('imperial');\n\n  const [{ weatherData, isError, isLoading }, dispatch] = useReducer(\n    fetchReducer,\n    {\n      weatherData: initialState,\n      isLoading: false,\n      isError: false,\n    }\n  );\n  useEffect(() => {\n    const { cancel, token } = axios.CancelToken.source();\n    const timeOutId = setTimeout(() => {\n      fetchWeatherData(\n        { name: selectedCity, coord: selectedCoord },\n        dispatch,\n        token\n      );\n    }, 500);\n    return () => cancel('No longer latest query') || clearTimeout(timeOutId);\n  }, [selectedCity, selectedCoord]);\n\n  // useEffect(() => {\n  //   const { cancel, token } = axios.CancelToken.source();\n  //   const timeOutId = setTimeout(\n  //     () =>\n  //       fetchSearchSuggestions(searchTerm, token).then((res) =>\n  //         setSearchSuggestions(res)\n  //       ),\n  //     500\n  //   );\n  //   return () => cancel('No longer latest query') || clearTimeout(timeOutId);\n  // }, [searchTerm]);\n\n  const onChangeCity = (e) => {\n    // if (e.target.value === '') {\n    //   dispatch({ type: 'RESET' });\n    // }\n    setSelectedCity(e.name);\n    setSelectedCoord({ lat: e.lat ?? null, lon: e.lon ?? null });\n  };\n  const onSelectCity = (e) => {\n    // if (e.target.value === '') {\n    //   dispatch({ type: 'RESET' });\n    // }\n    setSelectedCity(e);\n    setSelectedCoord({ lat: null, lon: null });\n  };\n\n  // const onChangeLatLon = (e) => {\n  //   dispatch({\n  //     type: 'SEED',\n  //     payload: {\n  //       lat: e.coord.lat,\n  //       lon: e.coord.lon,\n  //       name: e.name,\n  //       timezone: '',\n  //       timezone_offset: null,\n  //       current: null,\n  //       hourly: [],\n  //       daily: [],\n  //     },\n  //   });\n  // };\n\n  // const onChangeQuery = (e) => {\n  //   if (e.target.value === '') {\n  //     dispatch({ type: 'RESET' });\n  //   }\n  //   setShowSuggestions(true);\n  //   setSearchTerm(e.target.value);\n  // };\n\n  // const hideSuggestions = () => setShowSuggestions(false);\n\n  return (\n    <div className='App'>\n      <div className='container py-5 h-100'>\n        <div className='row d-flex justify-content-center align-items-center h-100'>\n          <div className='position-relative col-md-8 col-lg-6 col-xl-4'>\n            <h1 className='text-center'>Weather App</h1>\n            {/* <SearchBar\n              searchTerm={searchTerm}\n              setSearchTerm={setSearchTerm}\n              onChangeQuery={onChangeQuery}\n              setSelectedCity={setSelectedCity}\n              showSuggestions={showSuggestions}\n              hideSuggestions={hideSuggestions}\n              searches={_searches}\n            /> */}\n            <Autocomplete\n              changeCity={onChangeCity}\n              // changeLatLon={onChangeLatLon}\n            />\n            <UnitToggle\n              handleImperial={() => setUnits('imperial')}\n              handleMetric={() => setUnits('metric')}\n            />\n            <Cities cityList={cities} onSelection={onSelectCity} />\n            {isError && (\n              <div className='alert alert-danger'>\n                {selectedCity\n                  ? `We do not have information for ${selectedCity}, please enter another city`\n                  : 'Something went wrong...please enter another city'}\n              </div>\n            )}\n            {isLoading ? (\n              <WeatherCardSkeleton />\n            ) : selectedCity !== '' && !isError ? (\n              <>\n                <WeatherCard data={weatherData} units={units} />\n                {/* <ChartInst hourlyData={weatherData.hourly.slice(0, 8)} /> */}\n              </>\n            ) : (\n              <div></div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}